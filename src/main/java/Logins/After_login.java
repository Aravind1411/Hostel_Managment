/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
package Logins;
import Logins.Addroom;
import javax.swing.JOptionPane;
import java.awt.Toolkit;
import java.awt.event.WindowEvent; 
import Logins.After_login;
import java.util.LinkedList;
import java.util.*;
import java.io.*;

/**
 *
 * @author Aravind
 */
public class After_login extends javax.swing.JFrame{
       public  int si = 0,sh=0,in=0;
       public int singlecount=0;
       public int sharecount = 0,flagsingledel=0,flagsharedel,flaginterdel;
       public int intercount = 0,singledelcount=0,sharedelcount=0,interdelcount=0;
       public int hoschoice,delhos;
       public String sharename,sharefathername,shareaddress,sharedept,inputname,inputfathername,inputaddress,inputdept,intername,interfathername,interaddress,interdept,singlevaca,sharevaca,intervaca,vacafathersingle,vacafathershare,vacafatherinter;
       public int sharemobno,shareyear,inputmobno,inputyear,interyear,intermobno;
       public int maxsingle=0,maxshared=0,maxinter=0,singleroom=1,shareroom=1,interroom=1;
       public int con=0,singlewait=0,sharewait=0,interwait=0,dischoice,sharecheck=0;
        Scanner sc = new Scanner(System.in);
       
    /**
     * Creates new form After_login
     */
    public After_login()  {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jButton1 = new javax.swing.JButton();
        jButton2 = new javax.swing.JButton();
        jButton3 = new javax.swing.JButton();
        jButton4 = new javax.swing.JButton();
        jButton5 = new javax.swing.JButton();
        jButton6 = new javax.swing.JButton();
        jButton7 = new javax.swing.JButton();
        jButton8 = new javax.swing.JButton();
        jButton9 = new javax.swing.JButton();
        jLabel2 = new javax.swing.JLabel();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        getContentPane().setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel1.setFont(new java.awt.Font("Yu Gothic UI Semibold", 0, 36)); // NOI18N
        jLabel1.setText("       Menu");
        getContentPane().add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(260, 0, 249, 63));

        jButton1.setBackground(new java.awt.Color(255, 255, 255));
        jButton1.setText("1.Request a room");
        jButton1.setAutoscrolls(true);
        jButton1.setBorder(javax.swing.BorderFactory.createMatteBorder(1, 1, 1, 1, new java.awt.Color(255, 255, 255)));
        jButton1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton1ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton1, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 70, 180, 45));

        jButton2.setText("2.Vacate a room");
        jButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton2ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton2, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 130, 180, 40));

        jButton3.setText("3.Find a student");
        jButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton3ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton3, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 180, 180, 45));

        jButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton4ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton4, new org.netbeans.lib.awtextra.AbsoluteConstraints(343, 764, 180, 44));

        jButton5.setText("5.Go to Login page");
        jButton5.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton5ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton5, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 300, 180, 40));

        jButton6.setText("4.Display all Records");
        jButton6.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton6ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton6, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 240, 180, 40));

        jButton7.setText("6.Exit");
        jButton7.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton7ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton7, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 480, 180, 40));

        jButton8.setText("6.Display waiting lists");
        jButton8.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton8ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton8, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 360, 180, 40));

        jButton9.setText("7.Write into file");
        jButton9.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jButton9ActionPerformed(evt);
            }
        });
        getContentPane().add(jButton9, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 420, 180, 40));

        jLabel2.setIcon(new javax.swing.ImageIcon("C:\\Users\\Aravind\\Desktop\\SSN-Engineering-College-Admission-2018.jpg")); // NOI18N
        jLabel2.setText("jLabel2");
        getContentPane().add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 800, 540));

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton3ActionPerformed
        System.out.println("Enter name  of the student to be found");
        
        String searchname  = sc.next();
        System.out.println("Enter  fathename of the student to be found");
        //sc.nextLine(); 
        String searchfathername = sc.next();
        System.out.println("NAme :"+searchname);
        System.out.println("fathr:"+searchfathername);
        System.out.println("Enter tyype of hostel\n1->SINGLE\n2->SHARED\n3->INTERNATIONAL");
        int hosearch = sc.nextInt();
        int flag=10;
        if(hosearch==1)
        {
            for(int x=0;x<si;x++)
            {    
                flag = b[x].search(searchname,searchfathername);
                if(flag==1)
                    break;
            } 
            if(flag!=1)
            {
                System.out.println("Sorry the student is n not found\n");
            }
                // TODO add your handling code here:
        }
        else if(hosearch==2)
        {
            for(int x=0;x<si;x++)
            {    
                flag = c[x].search(searchname,searchfathername);
                if(flag==1)
                    break;
            } 
            if(flag!=1)
            {
                System.out.println("Sorry the student is  not found\n");
            }
                // TODO add your handling code here:
        }
        else if(hosearch==3)
        {
            for(int x=0;x<si;x++)
            {    
                flag = d[x].search(searchname,searchfathername);
                if(flag==1)
                    break;
            } 
            if(flag!=1)
            {
                System.out.println("Sorry the student is not found not found\n");
            }
                // TODO add your handling code here:
        }
        else
            System.out.println("Give the proper hostel name\n");
                
    }//GEN-LAST:event_jButton3ActionPerformed

    private void jButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jButton4ActionPerformed
class Single {

    /**
     * Creates new form Addroom
     */
    public String name;
    public String fathername;
    public String typeofhostel;
    public String address;
    public int roomno;
    public int pno;
    public int year;
    public String dept;
    Single()
    {
    }
   Single (String name,String fathername,String typeofhostel,String address,int pno,int year,String dept,int roomno) {
        this.name = name;
        this.fathername = fathername;
        this.typeofhostel = typeofhostel;
        this.address = address;
        this.pno = pno;
        this.year = year;
        this.dept= dept;
        this.roomno = roomno;
   }
   public void assign(String name,String fathername,String typeofhostel,String address,int pno,int year,String dept,int roomno)
   {
       this.name = name;
        this.fathername = fathername;
        this.typeofhostel = typeofhostel;
        this.address = address;
        this.pno = pno;
        this.year = year;
        this.dept= dept;
        this.roomno = roomno;
   }
   public void display()
   {  {  if(dischoice==1){
       System.out.println("NAME: "+name);
       System.out.println("FATHERNAME: "+fathername);
       System.out.println("YEAR: "+year);
       System.out.println("ROOM NO:  A-"+roomno);
      System.out.println("DEPARTMENT: "+dept);
      System.out.println("ADDRESS: "+address); 
      System.out.println("MOBILE NUMBR: "+pno);
   }
   if(dischoice==2){
       System.out.println("NAME: "+name);
       System.out.println("FATHERNAME: "+fathername);
       System.out.println("YEAR: "+year);
       System.out.println("ROOM NO:  S-"+roomno);
      System.out.println("DEPARTMENT: "+dept);
      System.out.println("ADDRESS: "+address); 
      System.out.println("MOBILE NUMBR: "+pno);
   }
   if(dischoice==3){
       System.out.println("NAME: "+name);
       System.out.println("FATHERNAME: "+fathername);
       System.out.println("YEAR: "+year);
       System.out.println("ROOM NO:  I-"+roomno);
      System.out.println("DEPARTMENT: "+dept);
      System.out.println("ADDRESS: "+address); 
      System.out.println("MOBILE NUMBR: "+pno);
   }
}
   }
   public int search(String name,String fathername)
   {
     if(this.name.equals(name)&&this.fathername.equals(fathername))
     {
         System.out.println("NAME: "+name);
       System.out.println("YEAR: "+year);
      System.out.println("FATHERNAME: "+fathername);
      System.out.println("DEPARTMENT: "+dept);
      System.out.println("HOSTEL: "+typeofhostel);
      System.out.println("ADDRESS: "+address); 
      System.out.println("MOBILE NUMBR: "+pno);
      return 1;
     }
     else
            return 0;
}
   public int Checkfile()throws FileNotFoundException{ 
    int fcount;
    String fileName ="D:\\single.txt";
    fcount=0;
    File file = new File (fileName);
    Scanner myReader = new Scanner(file);
    while(myReader.hasNextLine()){
        //System.out.println(myReader.nextLine());
        myReader.nextLine();
        fcount++;
    }
     return(fcount/8);  
    }
   
   @Override
   public String toString()
   {
       return ("NAME: "+name+"\nYEAR: "+year+"\nFATHERNAME: "+fathername+"\nDEPARTMENT: "+dept+"\nMOBILE NUMBR: "+pno+"\nADDRESS: "+address);
      /*System.out.println("FATHERNAME: "+fathername);
      System.out.println("DEPARTMENT: "+dept);
      System.out.println("ADDRESS: "+address); 
      System.out.println("MOBILE NUMBR: "+pno);*/
   }
}
class Shared{

    /**
     * Creates new form Addroom
     */
    public String name;
    public String fathername;
    public String typeofhostel;
    public String address;
    public int roomno;
    public int pno;
    public int year;
    public String dept;
    
    Shared (String name,String fathername,String typeofhostel,String address,int pno,int year,String dept,int roomno) {
        this.name = name;
        this.fathername = fathername;
        this.typeofhostel = typeofhostel;
        this.address = address;
        this.pno = pno;
        this.year = year;
        this.dept= dept;
        this.roomno = roomno;
    }
   public void assign(String name,String fathername,String typeofhostel,String address,int pno,int year,String dept,int roomno)
   {
       this.name = name;
        this.fathername = fathername;
        this.typeofhostel = typeofhostel;
        this.address = address;
        this.pno = pno;
        this.year = year;
        this.dept= dept;
        this.roomno = roomno;
   }
   public void display()
   {
         if(dischoice==1){
       System.out.println("NAME: "+name);
       System.out.println("FATHERNAME: "+fathername);
       System.out.println("YEAR: "+year);
       System.out.println("ROOM NO:  A-"+roomno);
      System.out.println("DEPARTMENT: "+dept);
      System.out.println("ADDRESS: "+address); 
      System.out.println("MOBILE NUMBR: "+pno);
   }
   if(dischoice==2){
       System.out.println("NAME: "+name);
       System.out.println("FATHERNAME: "+fathername);
       System.out.println("YEAR: "+year);
       System.out.println("ROOM NO:  S-"+roomno);
      System.out.println("DEPARTMENT: "+dept);
      System.out.println("ADDRESS: "+address); 
      System.out.println("MOBILE NUMBR: "+pno);
   }
   if(dischoice==3){
       System.out.println("NAME: "+name);
       System.out.println("FATHERNAME: "+fathername);
       System.out.println("YEAR: "+year);
       System.out.println("ROOM NO:  I-"+roomno);
      System.out.println("DEPARTMENT: "+dept);
      System.out.println("ADDRESS: "+address); 
      System.out.println("MOBILE NUMBR: "+pno);
   }
   }
   public int search(String name,String fathername)
   {
     if(this.name.equals(name)&&this.fathername.equals(fathername))
     {
         System.out.println("NAME: "+name);
       System.out.println("YEAR: "+year);
      System.out.println("FATHERNAME: "+fathername);
      System.out.println("DEPARTMENT: "+dept);
      System.out.println("HOSTEL: "+typeofhostel);
      System.out.println("ADDRESS: "+address); 
      System.out.println("MOBILE NUMBR: "+pno);
      return 1;
     }
     else
            return 0;
}
   @Override
   public String toString()
   {
       return ("NAME: "+name+"\nYEAR: "+year+"\nFATHERNAME: "+fathername+"\nDEPARTMENT: "+dept+"\nMOBILE NUMBR: "+pno+"\nADDRESS: "+address);
     
   }
}
class International {

    /**
     * Creates new form Addroom
     */
    public String name;
    public String fathername;
    public String typeofhostel;
    public String address;
    public int roomno;
    public int pno;
    public int year;
    public String dept;
    
    International(String name,String fathername,String typeofhostel,String address,int pno,int year,String dept,int roomno){
        this.name = name;
        this.fathername = fathername;
        this.typeofhostel = typeofhostel;
        this.address = address;
        this.pno = pno;
        this.year = year;
        this.dept= dept;
        this.roomno = roomno;
    }
    
   
   public void assign(String name,String fathername,String typeofhostel,String address,int pno,int year,String dept,int roomno)
   {
       this.name = name;
        this.fathername = fathername;
        this.typeofhostel = typeofhostel;
        this.address = address;
        this.pno = pno;
        this.year = year;
        this.dept= dept;
        this.roomno = roomno;
   }
   public void display()
   {  if(dischoice==1){
       System.out.println("NAME: "+name);
       System.out.println("FATHERNAME: "+fathername);
       System.out.println("YEAR: "+year);
       System.out.println("ROOM NO:  A-"+roomno);
      System.out.println("DEPARTMENT: "+dept);
      System.out.println("ADDRESS: "+address); 
      System.out.println("MOBILE NUMBR: "+pno);
   }
   if(dischoice==2){
       System.out.println("NAME: "+name);
       System.out.println("FATHERNAME: "+fathername);
       System.out.println("YEAR: "+year);
       System.out.println("ROOM NO:  S-"+roomno);
      System.out.println("DEPARTMENT: "+dept);
      System.out.println("ADDRESS: "+address); 
      System.out.println("MOBILE NUMBR: "+pno);
   }
   if(dischoice==3){
       System.out.println("NAME: "+name);
       System.out.println("FATHERNAME: "+fathername);
       System.out.println("YEAR: "+year);
       System.out.println("ROOM NO:  I-"+roomno);
      System.out.println("DEPARTMENT: "+dept);
      System.out.println("ADDRESS: "+address); 
      System.out.println("MOBILE NUMBR: "+pno);
   }
   
      
}
   public int search(String name,String fathername)
   {
     if(this.name.equals(name)&&this.fathername.equals(fathername))
     {
         System.out.println("NAME: "+name);
       System.out.println("YEAR: "+year);
      System.out.println("FATHERNAME: "+fathername);
      System.out.println("DEPARTMENT: "+dept);
      System.out.println("HOSTEL: "+typeofhostel);
      System.out.println("ADDRESS: "+address); 
      System.out.println("MOBILE NUMBR: "+pno);
      return 1;
     }
     else
            return 0;
}
   @Override
   public String toString()
   {
       return ("NAME: "+name+"\nYEAR: "+year+"\nFATHERNAME: "+fathername+"\nDEPARTMENT: "+dept+"\nMOBILE NUMBR: "+pno+"\nADDRESS: "+address);
      /*System.out.println("FATHERNAME: "+fathername);
      System.out.println("DEPARTMENT: "+dept);
      System.out.println("ADDRESS: "+address); 
      System.out.println("MOBILE NUMBR: "+pno);*/
   }
   
   
}
/*
class Checkfile{
    
}

*/
Single b[]  = new Single[100];
Shared c[]  = new Shared[100];
International d[] = new International[100];
Queue<Single> sq = new LinkedList<>();
Queue<Shared> shq = new LinkedList<>();
Queue<International> iq = new LinkedList<>();

        
    

    private void jButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton1ActionPerformed
            
          
           Single temp=new Single();
       
        int addchoice=1; 
        System.out.println("Enter the type of hostel:\n1->SINGLE\n2->Shared\n3->International\n");
        hoschoice = sc.nextInt();
        switch(hoschoice)
        {
           case(1):
        //System.out.println("I is "+i);
       // Scanner sc = new Scanner(System.in);
         try{ 
               con=temp.Checkfile();
               
           }
           catch(FileNotFoundException enfe){
           }
        do{
            
        System.out.println("Enter name:");
     
         sc.nextLine();
        inputname = sc.nextLine();
        System.out.println("Enter father name:");
        inputfathername = sc.nextLine();
        System.out.println("Enter address:");
         inputaddress = sc.nextLine();
        System.out.println("Enter department");
        //sc.nextLine();
         inputdept = sc.next();
         System.out.println("Enter Year:");
         inputyear = sc.nextInt();
        System.out.println("Enter phonenumber");
        inputmobno = sc.nextInt();

        if((maxsingle<3)&&(con<3)){
       b[si]=new Single(inputname,inputfathername,"single",inputaddress,inputmobno,inputyear,inputdept,singleroom);        
       // JOptionPane.showMessageDialog(null,"Room allocated successfully\nYour room no is A-"+singleroom,"Confiramtion message",JOptionPane.INFORMATION_MESSAGE);
        System.out.println("Room allocated successfully\nYour room no is A-"+singleroom);
        System.out.println("DO you want to add further Students in single room\n1->Yes\nOthers->Exit");
               addchoice = sc.nextInt();
               si++;
               singleroom++;
               maxsingle++;
               
        }
        else
        {   System.out.println("Sorry we don't have any single rooms left\nYou will be added in the waiting list\n");  
            temp = new Single(inputname,inputfathername,"single",inputaddress,inputmobno,inputyear,inputdept,singleroom);
                sq.add(temp);
                singlewait++;
                //System.out.println("Queue : \n"+sq.toString());
               System.out.println("DO you want to add further Students in single room\n1->Yes\nOthers->Exit");
               addchoice = sc.nextInt();
        
    
          }
        }while(addchoice==1);
            //System.out.println("loop exited.\n");
          if(addchoice!=1)
          {   addchoice = 1;
              After_login again = new After_login();
              again.setVisible(true);
          }
          break;
        
        
          
          
          case(2):
        do{
            dischoice=2;
        System.out.println("Enter name:");
        sc.nextLine();
        sharename = sc.nextLine();
        System.out.println("Enter father name:");
        sharefathername = sc.nextLine();
        System.out.println("Enter address:");
        shareaddress = sc.nextLine();
        System.out.println("Enter department");
        sharedept = sc.next();
        System.out.println("Enter Year:");
        shareyear = sc.nextInt();
        System.out.println("Enter phonenumber");
        sharemobno = sc.nextInt();
// TODO add your handling code here:
  
       if(shareroom<4&&sharecheck<2){
        c[sh]=new Shared(sharename,sharefathername,"shared",shareaddress,sharemobno,shareyear,sharedept,shareroom);
        //c[sh].display();
               System.out.println("Room allocated successfully\nYour roomno is S-"+shareroom);
               sh++;
                //System.out.println("Sh is "+sh);
                sharecheck++;
                //System.out.println("Sharecheck in 1st if is "+sharecheck);
                System.out.println("DO you want to add further Students in shared room\n1->YES\nOthers->EXIT");
               addchoice = sc.nextInt();
       }
       else if(shareroom<4&&sharecheck==2&&sh<6){
          //no of hostellers per room
           //maxshared++;//maximum no of rooms
           shareroom++;//for room no
           //sh++;//total no of shared hostellerrs
           //System.out.println("Else if SH is"+sh);
            c[sh]=new Shared(sharename,sharefathername,"shared",shareaddress,sharemobno,shareyear,sharedept,shareroom); 
            //c[sh].display();
            sh++;
            sharecheck=1;
             System.out.println("Sharecheck in else if is "+sharecheck);
               System.out.println("Room allocated successfully\nYour roomno is S-"+shareroom);
            System.out.println("DO you want to add further Students in shared room\n1->Yes\nOthers->Exit");
               addchoice = sc.nextInt();
        
       }
         else
        {   System.out.println("Sorry we don't have any shared rooms left\nYou will be added in the waiting list\n");
            Shared temp1 = new Shared(sharename,sharefathername,"shared",shareaddress,sharemobno,shareyear,sharedept,shareroom);
//int chumma = 3;    
            //b[chumma]=
                shq.add(temp1);
                sharewait++;
                //System.out.println("Queue : \n"+shq.toString());
               
        
               System.out.println("DO you want to add further Students in single room\n1->Yes\nOthers->Exit");
               addchoice = sc.nextInt();
        
    
          } 
          }while(addchoice==1);
            //System.out.println("loop exited.\n");
          if(addchoice!=1)
          { addchoice = 1;
              After_login again1 = new After_login();
              again1.setVisible(true);
          }
          break;
          
          case(3):
              do{
                  
        System.out.println("Enter name:");
        sc.nextLine();
        intername = sc.nextLine();
        System.out.println("Enter father name:");
        interfathername = sc.nextLine();
        System.out.println("Enter address:");
        interaddress = sc.nextLine();
        System.out.println("Enter department");
        interdept = sc.next();
        System.out.println("Enter Year:");
         interyear = sc.nextInt();
        System.out.println("Enter phonenumber");
        intermobno = sc.nextInt();
// TODO add your handling code here:
 if(maxinter<3){
        d[in]=new International(intername,interfathername,"International",interaddress,intermobno,interyear,interdept,interroom);
       
       
       System.out.println("Room allocated successfully\nYour roomno is I-"+interroom);
       
               System.out.println("DO you want to add further Students in international room\n1->YES\nOthers->EXIT");
               addchoice = sc.nextInt();
               in++;
               interroom++;
                maxinter++;
               
 }
 else
        {   System.out.println("Sorry we don't have any international rooms left\nYou will be added in the waiting list\n");
            International temp2 = new International(intername,interfathername,"International",interaddress,intermobno,interyear,interdept,interroom);
//int chumma = 3;    
            //b[chumma]=
                iq.add(temp2);
                interwait++;
               // System.out.println("Queue : \n"+iq.toString());
               System.out.println("DO you want to add further Students in single room\n1->Yes\nOthers->Exit");
               addchoice = sc.nextInt();
        
    
          }
        
 
          }while(addchoice==1);
            //System.out.println("loop exited.\n");
          if(addchoice!=1)
          { addchoice  = 1;
              After_login again2 = new After_login();
              again2.setVisible(true);
          }
             
          break;
              
         
              
              
                
    }//GEN-LAST:event_jButton1ActionPerformed
       // TODO
    
    
    }
    private void jButton5ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton5ActionPerformed
        // TODO add your handling code here:
        Login l = new Login();
        l.setVisible(true);
    }//GEN-LAST:event_jButton5ActionPerformed

    private void jButton6ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton6ActionPerformed
        System.out.println("*****SINGLE HOSTEL DETAILS****");
        for(int x=0;x<si;x++){
        dischoice=1;
        b[x].display();
        System.out.println("**********");
        }
        System.out.println("------------------------------");
       System.out.println("*********SHARED HOSTEL DETAILS******");
  
      for(int x=0;x<sh;x++){
        dischoice=2;
        c[x].display();
        System.out.println("****************");
        }
                System.out.println("------------------------------");
        System.out.println("********INTERNATIONAL HOSTEL DETAILS****");
        for(int x=0;x<in;x++){
        dischoice=3;
        d[x].display();
        System.out.println("****************");
        }
                System.out.println("------------------------------");
        
        
        
       
    }//GEN-LAST:event_jButton6ActionPerformed

    private void jButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton2ActionPerformed
    ArrayList<Single> delsingle = new ArrayList<Single>();
    
     ArrayList<Shared> delshare = new ArrayList<Shared>();
      ArrayList<International> delinter = new ArrayList<International>();
    for(int u=0;u<si;u++)    
    delsingle.add(b[u]);
    for(int u=0;u<sh;u++)    
    delshare.add(c[u]);
    for(int u=0;u<in;u++)    
    delinter.add(d[u]);
    
    
    System.out.println("Enter the type of the hostel the student wants to vacate\n1->Single\2->Shared\n3->International");
    delhos = sc.nextInt();
    switch(delhos)
    {
        case(1):
            System.out.println("Enter the name of the student who is vacating:");
            sc.nextLine();
            singlevaca = sc.nextLine();
            System.out.println("Enter the fathername of the student who is vacating:");
            vacafathersingle = sc.nextLine();
            flagsingledel = 0;//check student
            for(Single i:delsingle)
            {                
                if(i.name.equals(singlevaca)&&(i.fathername.equals(vacafathersingle))){
                    int t=i.roomno;
                    delsingle.remove(i);
                    flagsingledel = 1;
                    if(singlewait > 0){
                    Single temp = sq.poll();
                    temp.roomno=t;
                    delsingle.add(temp);
                    }
                    else{
                        si--;
                    }
                    b = delsingle.toArray(b);
                   
                    System.out.println("*******Student removed successfully*********");
                    break;
                }
                
                    
            }
            if(flagsingledel!=1)
                System.out.println("Student not found");
            break;
        case(2):
            //System.out.println("SHare working");
            System.out.println("Enter the name of the student who is vacating:");
            sc.nextLine();
            sharevaca = sc.nextLine();
            System.out.println("Enter the fathername of the student who is vacating:");
            vacafathershare = sc.nextLine();
            flagsharedel = 0;
           // System.out.println("Check name:"+sharevaca);
            //System.out.println("Check father name:"+vacafathershare);
            for(Shared i:delshare)
            {
            
                if(i.name.equals(sharevaca)&&(i.fathername.equals(vacafathershare))){
                    delshare.remove(i);
                    int x=i.roomno;
                    
                    flagsharedel = 1;
                     if(sharewait > 0){
                    Shared temp1 = shq.poll();
                    temp1.roomno=x;
                    delshare.add(temp1);
                    }
                    else{
                        sh--;
                    }
                    c = delshare.toArray(c);
                    System.out.println("*******Student removed successfully*********");
                    break;
                    
                }
                
                    
            }
            if(flagsharedel!=1)
                System.out.println("Student not found");
            break;
        case(3):
            System.out.println("Enter the name of the student who is vacating:");
            sc.nextLine();
             intervaca = sc.nextLine();
            System.out.println("Enter the fathername of the student who is vacating:");
            vacafatherinter = sc.nextLine();
            flaginterdel = 0;
            for(International i:delinter)
            {
            
                if(i.name.equals(intervaca)&&(i.fathername.equals(vacafatherinter))){
                    delinter.remove(i);
                    int deli=i.roomno;
                    interdelcount++;
                    flaginterdel = 1;
                     if(interwait > 0){
                    International temp2 = iq.poll();
                    temp2.roomno=deli;
                    delinter.add(temp2);
                    }
                    else{
                        in--;
                    }
                   
                    d = delinter.toArray(d);
                    in--;
                    System.out.println("*******Student removed successfully*********");
                    break;
                    
                }
            }
            if(flaginterdel!=1)
                System.out.println("Student not found");
            break;
            
       
       
            
        default:
            break;
                    
    }//ODO add your handling code here:
    }//GEN-LAST:event_jButton2ActionPerformed

    private void jButton7ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton7ActionPerformed
        System.exit(0);        // TODO add your handling code here:
    }//GEN-LAST:event_jButton7ActionPerformed

    private void jButton8ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton8ActionPerformed
        // TODO add your handling code here:
        System.out.println("SINGLE HOSTEL WAITING LIST DETAILS");
        
        for(Single i:sq)
        System.out.println(i);
        
        System.out.println("----------------------------");
        
        System.out.println("SHARED HOSTEL WAITING LIST DETAILS");
        
        
        for(Shared i:shq)
        System.out.println(i);
        
        //System.out.println(shq);
        System.out.println("----------------------------");
        System.out.println("INTERNATIONAL HOSTEL WAITING LIST DETAILS");
        for(International i:iq)
        System.out.println(i);
        //System.out.println(iq);
        
        System.out.println("----------------------------");
                    
    }//GEN-LAST:event_jButton8ActionPerformed

    private void jButton9ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jButton9ActionPerformed
        // TODO add your handling code here:
        
        
        try{
        FileWriter f = new FileWriter("D:\\single.txt");
        f.write("SINGLE HOSTEL DETAILS\n");
        for(int x=0;x<si;x++){
        f.write("\nName:"+b[x].name);
        f.write("\nFATHERNAME: "+b[x].fathername);
        f.write("\nYEAR: "+b[x].year);
        f.write("\nROOM NO:  S-"+b[x].roomno);
        f.write("\nDEPARTMENT: "+b[x].dept);
        f.write("\nADDRESS: "+b[x].address); 
        f.write("\nMOBILE NUMBR: "+b[x].pno);
        f.write("\n***************");
        
        }
        f.close();
        }
        catch(Exception e)
        {
            System.out.println(e);
        }
       
        
        //System.out.println("------------------------------");
       //System.out.println("*********SHARED HOSTEL DETAILS******");
  
      
        
           try{
               FileWriter f1 = new FileWriter("D:\\shared.txt");
               f1.write("SHARED HOSTEL DETAILS\n");
               for(int x=0;x<sh;x++){
        
        f1.write("\nName:"+c[x].name);
        f1.write("\nFATHERNAME: "+c[x].fathername);
        f1.write("\nYEAR: "+c[x].year);
        f1.write("\nROOM NO:  S-"+c[x].roomno);
        f1.write("\nDEPARTMENT: "+c[x].dept);
        f1.write("\nADDRESS: "+c[x].address); 
        f1.write("\nMOBILE NUMBR: "+c[x].pno);
        f1.write("\n***************");
       
        }f1.close();
           }
                
        catch(Exception e)
        {
            System.out.println(e);
        }
      
        
        try{
            FileWriter f2 = new FileWriter("D:\\international.txt");
            f2.write("INTERNATIONAL HOSTEL DETAILS\n");
        for(int x=0;x<in;x++)
        {
        f2.write("\nName:"+d[x].name);
        f2.write("\nFATHERNAME: "+d[x].fathername);
        f2.write("\nYEAR: "+d[x].year);
        f2.write("\nROOM NO:  S-"+d[x].roomno);
        f2.write("\nDEPARTMENT: "+d[x].dept);
        f2.write("\nADDRESS: "+d[x].address); 
        f2.write("\nMOBILE NUMBR: "+d[x].pno);
        f2.write("\n***************");    
        }
        f2.close();
        }
 
        catch(Exception e)
        {
            System.out.println(e);
        }
        System.out.println("------------------------------");
        
                
        
        System.out.println("Successfully wriiten");
        
        
     
    }//GEN-LAST:event_jButton9ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(After_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(After_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(After_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(After_login.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new After_login().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton jButton1;
    private javax.swing.JButton jButton2;
    private javax.swing.JButton jButton3;
    private javax.swing.JButton jButton4;
    private javax.swing.JButton jButton5;
    private javax.swing.JButton jButton6;
    private javax.swing.JButton jButton7;
    private javax.swing.JButton jButton8;
    private javax.swing.JButton jButton9;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    // End of variables declaration//GEN-END:variables
}
